{"ast":null,"code":"/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter() {\n  let store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    getItem: key => {\n      return store[key] || null;\n    },\n    setItem: (key, value) => {\n      store[key] = value;\n    },\n    removeItem: key => {\n      delete store[key];\n    }\n  };\n}","map":{"version":3,"mappings":"AAEA;;;;AAIA,OAAM,SAAUA,yBAAV,GAAyE;EAAA,IAArCC,KAAqC,uEAAF,EAAE;EAC7E,OAAO;IACLC,OAAO,EAAGC,GAAD,IAAQ;MACf,OAAOF,KAAK,CAACE,GAAD,CAAL,IAAc,IAArB;IACD,CAHI;IAKLC,OAAO,EAAE,CAACD,GAAD,EAAME,KAAN,KAAe;MACtBJ,KAAK,CAACE,GAAD,CAAL,GAAaE,KAAb;IACD,CAPI;IASLC,UAAU,EAAGH,GAAD,IAAQ;MAClB,OAAOF,KAAK,CAACE,GAAD,CAAZ;IACD;EAXI,CAAP;AAaD","names":["memoryLocalStorageAdapter","store","getItem","key","setItem","value","removeItem"],"sources":["/Users/johann/node_modules/@supabase/auth-js/src/lib/local-storage.ts"],"sourcesContent":["import { SupportedStorage } from './types'\n\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */\nexport function memoryLocalStorageAdapter(store: { [key: string]: string } = {}): SupportedStorage {\n  return {\n    getItem: (key) => {\n      return store[key] || null\n    },\n\n    setItem: (key, value) => {\n      store[key] = value\n    },\n\n    removeItem: (key) => {\n      delete store[key]\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}